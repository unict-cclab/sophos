name: Run CI

on:
  workflow_dispatch:
  push:
    branches: ["main"]
    paths:
      - app-group-operator/**
      - cluster-operator/**
      - mentat/**
      - scheduler-plugins/**
      - telemetry-service/**
  pull_request:
    branches: ["main"]
    paths:
      - app-group-operator/**
      - cluster-operator/**
      - mentat/**
      - scheduler-plugins/**
      - telemetry-service/**

env:
  REGISTRY: ghcr.io

jobs:
  app-group-operator:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      - name: Log in to the Container registry
        if: ${{ github.event_name != 'pull_request' || ! github.event.pull_request.head.repo.fork }}
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Short Commit SHA
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Build Image
        id: build-image
        working-directory: ./app-group-operator
        run: |
          #!/usr/bin/env bash
          set -euo pipefail
          make IMG=${IMG} docker-build
        shell: bash
        env:
          IMG: ${{ env.REGISTRY }}/amarchese96/sophos-app-group-operator:${{ steps.vars.outputs.sha_short }}

      - name: Push Image
        if: ${{ github.event_name != 'pull_request' || ! github.event.pull_request.head.repo.fork }}
        working-directory: ./app-group-operator
        run: |
          #!/usr/bin/env bash
          set -euo pipefail
          make IMG=${IMG} docker-push
        shell: bash
        env:
          IMG: ${{ env.REGISTRY }}/amarchese96/sophos-app-group-operator:${{ steps.vars.outputs.sha_short }}
  
  cluster-operator:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      - name: Log in to the Container registry
        if: ${{ github.event_name != 'pull_request' || ! github.event.pull_request.head.repo.fork }}
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Short Commit SHA
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Build Image
        id: build-image
        working-directory: ./cluster-operator
        run: |
          #!/usr/bin/env bash
          set -euo pipefail
          make IMG=${IMG} docker-build
        shell: bash
        env:
          IMG: ${{ env.REGISTRY }}/amarchese96/sophos-cluster-operator:${{ steps.vars.outputs.sha_short }}

      - name: Push Image
        if: ${{ github.event_name != 'pull_request' || ! github.event.pull_request.head.repo.fork }}
        working-directory: ./cluster-operator
        run: |
          #!/usr/bin/env bash
          set -euo pipefail
          make IMG=${IMG} docker-push
        shell: bash
        env:
          IMG: ${{ env.REGISTRY }}/amarchese96/sophos-cluster-operator:${{ steps.vars.outputs.sha_short }}
  
  network-exporter:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Log in to the Container registry
        if: ${{ github.event_name != 'pull_request' || ! github.event.pull_request.head.repo.fork }}
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Short Commit SHA
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Build Image
        id: build-image
        working-directory: ./mentat
        run: |
          #!/usr/bin/env bash
          set -euo pipefail
          make IMG=${IMG} docker-build
        shell: bash
        env:
          IMG: ${{ env.REGISTRY }}/amarchese96/mentat:${{ steps.vars.outputs.sha_short }}

      - name: Push Image
        if: ${{ github.event_name != 'pull_request' || ! github.event.pull_request.head.repo.fork }}
        working-directory: ./mentat
        run: |
          #!/usr/bin/env bash
          set -euo pipefail
          make IMG=${IMG} docker-push
        shell: bash
        env:
          IMG: ${{ env.REGISTRY }}/amarchese96/mentat:${{ steps.vars.outputs.sha_short }}
  
  scheduler:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Log in to the Container registry
        if: ${{ github.event_name != 'pull_request' || ! github.event.pull_request.head.repo.fork }}
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Short Commit SHA
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      
      - name: Get latest tag
        uses: actions-ecosystem/action-get-latest-tag@v1
        id: get-latest-tag
        with:
          with_initial_version: true

      - name: Get Short Commit SHA
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Build Image
        id: build-image
        working-directory: ./scheduler-plugins
        run: |
          #!/usr/bin/env bash
          set -euo pipefail
          make local-image RELEASE_VERSION=${RELEASE_VERSION} REGISTRY=${REGISTRY} IMAGE=${IMG}
        shell: bash
        env:
          RELEASE_VERSION: ${{ steps.get-latest-tag.outputs.tag }}
          REGISTRY: ${{ env.REGISTRY }}/amarchese96
          IMG: sophos-scheduler:${{ steps.vars.outputs.sha_short }}

      - name: Push Image
        if: ${{ github.event_name != 'pull_request' || ! github.event.pull_request.head.repo.fork }}
        run: |
          #!/usr/bin/env bash
          set -euo pipefail
          docker push ${IMG}
        shell: bash
        env:
          IMG: ${{ env.REGISTRY }}/amarchese96/sophos-scheduler:${{ steps.vars.outputs.sha_short }}
  
  telemetry-service:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        if: ${{ github.event_name != 'pull_request' || ! github.event.pull_request.head.repo.fork }}
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Short Commit SHA
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Build Image
        id: build-image
        working-directory: ./telemetry-service
        run: |
          #!/usr/bin/env bash
          set -euo pipefail
          make IMG=${IMG} docker-build
        shell: bash
        env:
          IMG: ${{ env.REGISTRY }}/amarchese96/sophos-telemetry-service:${{ steps.vars.outputs.sha_short }}

      - name: Push Image
        if: ${{ github.event_name != 'pull_request' || ! github.event.pull_request.head.repo.fork }}
        working-directory: ./telemetry-service
        run: |
          #!/usr/bin/env bash
          set -euo pipefail
          make IMG=${IMG} docker-push
        shell: bash
        env:
          IMG: ${{ env.REGISTRY }}/amarchese96/sophos-telemetry-service:${{ steps.vars.outputs.sha_short }}